on:
  push:
    branches:
      - "*"
    tags:
      - "*"
jobs:
  provide_repository_names:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v2
      - uses: octokit/graphql-action@v2.x
        id: get_repo_names
        with:
          query: |
            query { search(query: "org:qooxdoo", type: REPOSITORY, first: 100) {
              edges { node { ... on Repository { name } } }
            } }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: get_tag_name
        run: echo "::set-output name=tag::$(echo $GITHUB_REF | cut -d / -f 3)"
      - id: transform
        run: |
          DATA=$(node <<-HEREDOC
          let d=${{ steps.get_repo_names.outputs.data }}
          console.log(d.search.edges.map(item=>item.node.name));
          HEREDOC )
          echo "::set-output name=repos::$DATA"

    outputs:
      repos: ${{ steps.get_repo_names.outputs.repos }}
      tag: ${{ steps.get_tag_name.outputs.tag }}



  dispatch:
#    if: github.event.base_ref == 'refs/heads/master'
    strategy:
      matrix:
        repo: ${{ fromJson(needs.provide_repository_names.outputs.repos) }}
    runs-on: ubuntu-latest
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPOSITORY_DISPATCH }}
          repository: ${{ matrix.repo }}
          event-type: push-tag
          client-payload: ${{ needs.provide_repository_names.outputs.tag }}
